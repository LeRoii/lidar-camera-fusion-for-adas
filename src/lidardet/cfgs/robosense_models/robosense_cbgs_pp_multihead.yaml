CLASS_NAMES: ['vehicle', 'tricycle', 'big_vehicle', 'huge_vehicle', 'motorcycle', 'bicycle', 'pedestrian', 'cone']

DATA_CONFIG:
    _BASE_CONFIG_: cfgs/dataset_configs/robosense_dataset.yaml
    POINT_CLOUD_RANGE: [-51.2, -51.2, -5.0, 51.2, 51.2, 3.0] # 0.2
    #POINT_CLOUD_RANGE: [-60.0, -60.0, -5.0, 60.0, 60.0, 3.0]  # 0.15
    BALANCED_RESAMPLING: True
    DATA_PROCESSOR:
        - NAME: mask_points_and_boxes_outside_range
          REMOVE_OUTSIDE_BOXES: True

        - NAME: shuffle_points
          SHUFFLE_ENABLED: {
            'train': True,
            'test': False
          }

        - NAME: transform_points_to_voxels
          VOXEL_SIZE: [0.2, 0.2, 8.0]
          MAX_POINTS_PER_VOXEL: 20
          MAX_NUMBER_OF_VOXELS: {
            'train': 30000,
            'test': 30000
          }
    DATA_AUGMENTOR:
        DISABLE_AUG_LIST: ['placeholder']
        AUG_CONFIG_LIST:
            - NAME: gt_sampling
              USE_ROAD_PLANE: False
              DB_INFO_PATH:
                  - robosense_dbinfos_train.pkl
              PREPARE: {
                 filter_by_min_points: ['vehicle:5', 'tricycle:5', 'big_vehicle:5', 'huge_vehicle:5',
                  'motorcycle:5', 'bicycle:5', 'pedestrian:5', 'cone:5'
                 ],
              }

              SAMPLE_GROUPS: ['vehicle:4', 'tricycle:4', 'big_vehicle:4', 'huge_vehicle:4',
                              'motorcycle:4', 'bicycle:4', 'pedestrian:4', 'cone:4']

              NUM_POINT_FEATURES: 4
              DATABASE_WITH_FAKELIDAR: False
              REMOVE_EXTRA_WIDTH: [0.0, 0.0, 0.0]
              LIMIT_WHOLE_SCENE: False

            - NAME: random_world_flip
              ALONG_AXIS_LIST: ['x', 'y']

            - NAME: random_world_rotation
              WORLD_ROT_ANGLE: [-0.3925, 0.3925]

            - NAME: random_world_scaling
              WORLD_SCALE_RANGE: [0.95, 1.05]

MODEL:
    NAME: PointPillar

    VFE:
        NAME: PillarVFE
        WITH_DISTANCE: False
        USE_ABSLOTE_XYZ: True
        USE_NORM: True
        NUM_FILTERS: [64]

    MAP_TO_BEV:
        NAME: PointPillarScatter
        NUM_BEV_FEATURES: 64

    BACKBONE_2D:
        NAME: BaseBEVBackbone
        LAYER_NUMS: [3, 5, 5]
        LAYER_STRIDES: [2, 2, 2]
        NUM_FILTERS: [64, 128, 256]
        UPSAMPLE_STRIDES: [0.5, 1, 2]
        NUM_UPSAMPLE_FILTERS: [128, 128, 128]

    DENSE_HEAD:
        NAME: AnchorHeadMulti
        CLASS_AGNOSTIC: False

        DIR_OFFSET: 0.78539
        DIR_LIMIT_OFFSET: 0.0
        NUM_DIR_BINS: 2

        USE_MULTIHEAD: True
        SEPARATE_MULTIHEAD: True
        ANCHOR_GENERATOR_CONFIG: [
            {
                'class_name': 'vehicle',
                'anchor_sizes': [[5.0, 2.1, 1.7]],
                'anchor_rotations': [0, 1.57],
                'anchor_bottom_heights': [0.85],
                'align_center': False,
                'feature_map_stride': 4,
                'matched_threshold': 0.6,
                'unmatched_threshold': 0.45
            },
            {
              'class_name': 'tricycle',
              'anchor_sizes': [[3.5, 3.5, 1.7]],
              'anchor_rotations': [0, 1.57],
              'anchor_bottom_heights': [0.85],
              'align_center': False,
              'feature_map_stride': 4,
              'matched_threshold': 0.6,
              'unmatched_threshold': 0.45
            },
            {
              'class_name': 'big_vehicle',
              'anchor_sizes': [[8.0, 2.6, 3.0]],
              'anchor_rotations': [0, 1.57],
              'anchor_bottom_heights': [1.5],
              'align_center': False,
              'feature_map_stride': 4,
              'matched_threshold': 0.55,
              'unmatched_threshold': 0.4
            },
            {
              'class_name': 'huge_vehicle',
              'anchor_sizes': [[18, 2.6, 3.0]],
              'anchor_rotations': [0, 1.57],
              'anchor_bottom_heights': [1.5],
              'align_center': False,
              'feature_map_stride': 4,
              'matched_threshold': 0.5,
              'unmatched_threshold': 0.35
            },
            {
              'class_name': 'motorcycle',
              'anchor_sizes': [[1.8, 0.8, 1.6]],
              'anchor_rotations': [0, 1.57],
              'anchor_bottom_heights': [0.8],
              'align_center': False,
              'feature_map_stride': 4,
              'matched_threshold': 0.5,
              'unmatched_threshold': 0.3
            },
            {
              'class_name': 'bicycle',
              'anchor_sizes': [[1.8, 0.8, 1.6]],
              'anchor_rotations': [0, 1.57],
              'anchor_bottom_heights': [0.8],
              'align_center': False,
              'feature_map_stride': 4,
              'matched_threshold': 0.5,
              'unmatched_threshold': 0.35
            },
            {
              'class_name': 'pedestrian',
              'anchor_sizes': [[0.7, 0.7, 1.7]],
              'anchor_rotations': [0, 1.57],
              'anchor_bottom_heights': [0.85],
              'align_center': False,
              'feature_map_stride': 4,
              'matched_threshold': 0.6,
              'unmatched_threshold': 0.4
            },
            {
              'class_name': 'cone',
              'anchor_sizes': [[0.4, 0.4, 0.8]],
              'anchor_rotations': [0, 1.57],
              'anchor_bottom_heights': [0.4],
              'align_center': False,
              'feature_map_stride': 4,
              'matched_threshold': 0.6,
              'unmatched_threshold': 0.4
            },
        ]

        SHARED_CONV_NUM_FILTER: 64

        RPN_HEAD_CFGS: [
          {
            'HEAD_CLS_NAME': ['vehicle', 'tricycle'],
          },
          {
            'HEAD_CLS_NAME': ['big_vehicle', 'huge_vehicle'],
          },
          {
            'HEAD_CLS_NAME': ['motorcycle', 'bicycle'],
          },
          {
            'HEAD_CLS_NAME': ['pedestrian', 'cone'],
          },
        ]

        SEPARATE_REG_CONFIG:
          NUM_MIDDLE_CONV: 1
          NUM_MIDDLE_FILTER: 64
          REG_LIST: ['reg:2', 'height:1', 'size:3', 'angle:2']

        TARGET_ASSIGNER_CONFIG:
            NAME: AxisAlignedTargetAssigner
            POS_FRACTION: -1.0
            SAMPLE_SIZE: 512
            NORM_BY_NUM_EXAMPLES: False
            MATCH_HEIGHT: False
            BOX_CODER: ResidualCoder
            BOX_CODER_CONFIG: {
              'code_size': 7,
              'encode_angle_by_sincos': True  # 为true的话会在上面那个9基础上再加1。这样就能和上面那个REG_LIST对应上
            }

        LOSS_CONFIG:
            REG_LOSS_TYPE: WeightedL1Loss
            LOSS_WEIGHTS: {
              'pos_cls_weight': 1.0,
              'neg_cls_weight': 2.0,
              'cls_weight': 1.0,
              'loc_weight': 0.25,
              'dir_weight': 0.2,
              'code_weights': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
            }

    POST_PROCESSING:
        RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
        SCORE_THRESH: 0.1
        OUTPUT_RAW_SCORE: False

        EVAL_METRIC: kitti

        NMS_CONFIG:
            MULTI_CLASSES_NMS: True
            NMS_TYPE: nms_gpu
            NMS_THRESH: 0.2
            NMS_PRE_MAXSIZE: 1000
            NMS_POST_MAXSIZE: 83


OPTIMIZATION:
    BATCH_SIZE_PER_GPU: 2
    NUM_EPOCHS: 50

    OPTIMIZER: adam_onecycle
    LR: 0.003
    WEIGHT_DECAY: 0.01
    MOMENTUM: 0.9

    MOMS: [0.95, 0.85]
    PCT_START: 0.4
    DIV_FACTOR: 10
    DECAY_STEP_LIST: [35, 45]
    LR_DECAY: 0.1
    LR_CLIP: 0.0000001

    LR_WARMUP: False
    WARMUP_EPOCH: 1

    GRAD_NORM_CLIP: 10
